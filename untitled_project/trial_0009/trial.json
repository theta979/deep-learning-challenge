{"trial_id": "0009", "hyperparameters": {"space": [{"class_name": "Choice", "config": {"name": "activation", "default": "relu", "conditions": [], "values": ["relu", "tahn", "sigmoid"], "ordered": false}}, {"class_name": "Int", "config": {"name": "first_units", "default": null, "conditions": [], "min_value": 1, "max_value": 10, "step": 2, "sampling": "linear"}}], "values": {"activation": "tahn", "first_units": 3, "tuner/epochs": 3, "tuner/initial_epoch": 0, "tuner/bracket": 2, "tuner/round": 0}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"/opt/anaconda3/envs/dev/lib/python3.10/site-packages/keras_tuner/src/engine/base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"/opt/anaconda3/envs/dev/lib/python3.10/site-packages/keras_tuner/src/engine/base_tuner.py\", line 239, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n  File \"/opt/anaconda3/envs/dev/lib/python3.10/site-packages/keras_tuner/src/tuners/hyperband.py\", line 427, in run_trial\n    return super().run_trial(trial, *fit_args, **fit_kwargs)\n  File \"/opt/anaconda3/envs/dev/lib/python3.10/site-packages/keras_tuner/src/engine/tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n  File \"/opt/anaconda3/envs/dev/lib/python3.10/site-packages/keras_tuner/src/engine/tuner.py\", line 232, in _build_and_fit_model\n    model = self._try_build(hp)\n  File \"/opt/anaconda3/envs/dev/lib/python3.10/site-packages/keras_tuner/src/engine/tuner.py\", line 164, in _try_build\n    model = self._build_hypermodel(hp)\n  File \"/opt/anaconda3/envs/dev/lib/python3.10/site-packages/keras_tuner/src/tuners/hyperband.py\", line 430, in _build_hypermodel\n    model = super()._build_hypermodel(hp)\n  File \"/opt/anaconda3/envs/dev/lib/python3.10/site-packages/keras_tuner/src/engine/tuner.py\", line 155, in _build_hypermodel\n    model = self.hypermodel.build(hp)\n  File \"/var/folders/lg/7p0d681s6sjdhbp6q9_v7l_h0000gn/T/ipykernel_10582/2164460298.py\", line 9, in create_model\n    nn_model.add(tf.keras.layers.Dense(units=hp.Int('first_units',\n  File \"/opt/anaconda3/envs/dev/lib/python3.10/site-packages/keras/src/layers/core/dense.py\", line 89, in __init__\n    self.activation = activations.get(activation)\n  File \"/opt/anaconda3/envs/dev/lib/python3.10/site-packages/keras/src/activations/__init__.py\", line 126, in get\n    raise ValueError(\nValueError: Could not interpret activation function identifier: tahn\n"}